<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>Luis Quintanilla - All Updates</title>
    <link>https://www.luisquintanilla.me/feed</link>
    <description>All content updates from Luis Quintanilla's website</description>
    <lastBuildDate>2025-08-31 22:18 -05:00</lastBuildDate>
    <language>en</language>
    <item>
      <title>Miami vs. Notre Dame (2025)</title>
      <description>&lt;![CDATA[&lt;p&gt;Another great game that went down to the wire. Miami dug deep in the end and earned that W.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/notes/miami-vs-notre-dame-2025</link>
      <guid>https://www.luisquintanilla.me/notes/miami-vs-notre-dame-2025</guid>
      <pubDate>2025-08-31 22:18 -05:00</pubDate>
      <category>ncaaf</category>
      <category>miami</category>
      <category>notredame</category>
    </item>
    <item>
      <title>The Four Agreements by Don Miguel Ruiz</title>
      <description>&lt;![CDATA[&lt;h2&gt;Description&lt;/h2&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;In The Four Agreements, don Miguel Ruiz reveals the source of self-limiting beliefs that rob us of joy and create needless suffering. Based on ancient Toltec wisdom, The Four Agreements offer a powerful code of conduct that can rapidly transform our lives to a new experience of freedom, true happiness, and love.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Review&lt;/h2&gt;
&lt;p&gt;I purchased the paperback version but ended up listening to the audiobook version while doing chores over the weekend (~2.5 hours). This book gets straight to the point. That point being, throughout our lives we enter into agreements with society that enforce beliefs and influence our behavior, happiness, and inner peace. By speaking with truth and love, not suffering from main character syndrome (not everything is about you), seeking to understand rather than make assumptions, and not striving for perfection but constant improvement, you can slowly create new agreements that are more in line with your higher self.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/reviews/four-agreements-ruiz</link>
      <guid>https://www.luisquintanilla.me/reviews/four-agreements-ruiz</guid>
      <pubDate>08/30/2025 19:08 -05:00</pubDate>
    </item>
    <item>
      <title>Crescent library brings privacy to digital identity systems</title>
      <description>&lt;![CDATA[[reshare] &lt;blockquote class="blockquote"&gt;
&lt;p&gt;Digital identities, the electronic credentials embedded in phone wallets, workplace logins, and other apps, are becoming ubiquitous. While they offer unprecedented convenience, they also create new privacy risks, particularly around tracking and surveillance.&lt;br /&gt;
&lt;br&gt;
One of these risks is linkability, the ability to associate one or more uses of a credential to a specific person. Currently, when people use their mobile driverâ€™s license or log into various apps, hidden identifiers can link these separate activities together, building detailed profiles of user behavior.&lt;br /&gt;
&lt;br&gt;
To address this, we have released &lt;a href="https://eprint.iacr.org/2024/2013"&gt;Crescent&lt;/a&gt;, a cryptographic library that adds unlinkability to widely used identity formats, protecting privacy. These include JSON Web Tokens (the authentication standard behind many app logins) and mobile driverâ€™s licenses. Crescent also works without requiring the organizations that issue these credentials to update their systems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/microsoft/crescent-credentials"&gt;GitHub Repo&lt;/a&gt;&lt;/p&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/responses/crescent-msr-privacy-digital-identity</link>
      <guid>https://www.luisquintanilla.me/responses/crescent-msr-privacy-digital-identity</guid>
      <pubDate>2025-08-26 19:40 -05:00</pubDate>
      <category>research</category>
      <category>privacy</category>
      <category>microsoft</category>
    </item>
    <item>
      <title>Windows 11 upgrade?</title>
      <description>&lt;![CDATA[Album containing 0 photos]]&gt;</description>
      <link>https://www.luisquintanilla.me/media/windows-11-upgrade</link>
      <guid>https://www.luisquintanilla.me/media/windows-11-upgrade</guid>
      <pubDate>2025-08-23 20:11 -05:00</pubDate>
      <category>windows</category>
      <category>windows10</category>
    </item>
    <item>
      <title>Webmentions are back</title>
      <description>&lt;![CDATA[&lt;p&gt;Nice to see my GitHub Actions back to green after fixing my script to send webmentions.&lt;/p&gt;
&lt;p&gt;Now to discover more amazing content I can link out to.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/notes/webmentions-are-back</link>
      <guid>https://www.luisquintanilla.me/notes/webmentions-are-back</guid>
      <pubDate>2025-08-21 19:15 -05:00</pubDate>
      <category>indieweb</category>
      <category>webmention</category>
      <category>socialweb</category>
    </item>
    <item>
      <title>Small (web) is beautiful</title>
      <description>&lt;![CDATA[[star] &lt;blockquote class="blockquote"&gt;
&lt;p&gt;I dream of a web that fosters healthy conversations, together with personal and intellectual growth. The world is diverse and fascinating, and we can be information explorers together.&lt;/p&gt;
&lt;/blockquote&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/responses/small-web-is-beautiful</link>
      <guid>https://www.luisquintanilla.me/responses/small-web-is-beautiful</guid>
      <pubDate>2025-08-21 19:13 -05:00</pubDate>
      <category>smallweb</category>
      <category>indieweb</category>
      <category>blogging</category>
    </item>
    <item>
      <title>We're getting married!</title>
      <description>&lt;![CDATA[[reply] &lt;p&gt;Congrats!&lt;/p&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/responses/were-getting-married-reillys</link>
      <guid>https://www.luisquintanilla.me/responses/were-getting-married-reillys</guid>
      <pubDate>2025-08-21 18:47 -05:00</pubDate>
      <category></category>
    </item>
    <item>
      <title>Omnineural 4B</title>
      <description>&lt;![CDATA[[reshare] &lt;blockquote class="blockquote"&gt;
&lt;p&gt;OmniNeural-4B is the first multimodal AI model built natively for NPUs â€” handling text, images, and audio in one model.&lt;/p&gt;
&lt;/blockquote&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/responses/omnineural-4b</link>
      <guid>https://www.luisquintanilla.me/responses/omnineural-4b</guid>
      <pubDate>2025-08-20 23:59 -05:00</pubDate>
      <category>ai</category>
      <category>npu</category>
      <category>multimodal</category>
    </item>
    <item>
      <title>Agents.md</title>
      <description>&lt;![CDATA[[reshare] &lt;blockquote class="blockquote"&gt;
&lt;p&gt;A simple, open format for guiding coding agents&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;Think of AGENTS.md as a README for agents: a dedicated, predictable place to provide the context and instructions to help AI coding agents work on your project.&lt;/p&gt;
&lt;/blockquote&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/responses/agentsmd</link>
      <guid>https://www.luisquintanilla.me/responses/agentsmd</guid>
      <pubDate>2025-08-20 22:53 -05:00</pubDate>
      <category>ai</category>
      <category>agents</category>
      <category>openai</category>
    </item>
    <item>
      <title>College football is back (2025)</title>
      <description>&lt;![CDATA[&lt;p&gt;It's that time of the year again.&lt;/p&gt;
&lt;p&gt;Week 1 is going to be nuts with a top 5 matchup and several top 10 games.&lt;/p&gt;
&lt;p&gt;Looks like Penn State's schedule this year is going to be lighter than usual so they may have a shot at the title.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/notes/college-football-is-back-2025</link>
      <guid>https://www.luisquintanilla.me/notes/college-football-is-back-2025</guid>
      <pubDate>2025-08-20 21:54 -05:00</pubDate>
      <category>football</category>
      <category>ncaaf</category>
      <category>psu</category>
      <category>pennstate</category>
    </item>
    <item>
      <title>Seemingly Conscious AI</title>
      <description>&lt;![CDATA[[reshare] &lt;blockquote class="blockquote"&gt;
&lt;p&gt;&lt;strong&gt;We must build AI for people; not to be a person&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ðŸ’¯ðŸ’¯ðŸ’¯ðŸ’¯ðŸ’¯&lt;/p&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/responses/seemingly-conscious-ai</link>
      <guid>https://www.luisquintanilla.me/responses/seemingly-conscious-ai</guid>
      <pubDate>2025-08-20 19:46 -05:00</pubDate>
      <category>ai</category>
      <category>consciousness</category>
      <category>humanism</category>
    </item>
    <item>
      <title>Reclaim Control</title>
      <description>&lt;![CDATA[[bookmark] &lt;blockquote class="blockquote"&gt;
&lt;p&gt;RECLAIM CONTROL over your digital life, devices, services and data.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;You have the right to control your data, devices, and services. We coordinate, develop and foster communities of Reclaimers who want digital independence. Together, let's reclaim the right to a technical future of data sovereignty, digital autonomy, responsible governance, and collective care online for all.&lt;/p&gt;
&lt;/blockquote&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/responses/reclaim-control</link>
      <guid>https://www.luisquintanilla.me/responses/reclaim-control</guid>
      <pubDate>2025-08-19 21:41 -05:00</pubDate>
      <category>digitalsovereignty</category>
      <category>reclaimcontrol</category>
    </item>
    <item>
      <title>The Opt Out Project</title>
      <description>&lt;![CDATA[[bookmark] &lt;blockquote class="blockquote"&gt;
&lt;p&gt;I have built up a treasure trove of knowledge, devices, and services aimed at keeping me and my family away from the evils of data-collecting algorithmic systems.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;That's why I started this site. I've decided to put information about these tools and alternatives in one spot for others to find and use. Many of these tools are reviewed in the tech press, others are more bespoke but there is information out there if you know where to look. My goal is to bring it all together in one place, to guide you through the process, and help you opt out as well.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;...there are alternatives out there, better visions of what our lives could be like. There are systems that don't require capturing and storing all our data, mining us exploitatively for profit, and serving us the kinds of misinformation and advertising that has us hating our neighbors.&lt;/p&gt;
&lt;/blockquote&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/responses/out-out-project</link>
      <guid>https://www.luisquintanilla.me/responses/out-out-project</guid>
      <pubDate>2025-08-19 20:51 -05:00</pubDate>
      <category>optout</category>
      <category>alternative</category>
      <category>tech</category>
    </item>
    <item>
      <title>Reflections on the social web</title>
      <description>&lt;![CDATA[[reshare] &lt;blockquote class="blockquote"&gt;
&lt;p&gt;The work of a product team, when working with new technology, is to abstract away as much of this complexity as possible, so that it feels friendly and approachable to new people.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;My strongest belief about the social web is that if we want it to succeed, we have to keep lowering the barrier to entry.&lt;/p&gt;
&lt;/blockquote&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/responses/reflections-on-social-web</link>
      <guid>https://www.luisquintanilla.me/responses/reflections-on-social-web</guid>
      <pubDate>2025-08-18 19:31 -05:00</pubDate>
      <category>ghost</category>
      <category>socialweb</category>
      <category>indieweb</category>
    </item>
    <item>
      <title>Ghost 6.0</title>
      <description>&lt;![CDATA[[reshare] &lt;blockquote class="blockquote"&gt;
&lt;p&gt;In Ghost 6.0 we're introducing another new distribution channel: The social web. Now, millions of people can discover, follow, like and reply to your posts from any supported social web client - including Bluesky, Mastodon, Threads, Flipboard, Ghost, WordPress, Surf, WriteFreely, and many more.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;Just as people can visit your Ghost website in any browser, subscribe with any feed reader, or receive newsletters in any email client, they can now follow your Ghost publication from any social web client.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;Unlike closed platforms with restrictive algorithms, open web protocols create a direct connection between you and your subscribers which you have full control over.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;If you've been around on the web for while, and you can remember back that far... you might even call it the return of the blogosphere.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Love the introduction of social components to the Ghost platform. I'm so ready for the return of the blogosphere and the return to open protocols.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/responses/ghost-6-changelog</link>
      <guid>https://www.luisquintanilla.me/responses/ghost-6-changelog</guid>
      <pubDate>2025-08-18 19:24 -05:00</pubDate>
      <category>ghost</category>
      <category>fediverse</category>
      <category>socialweb</category>
      <category>publishing</category>
    </item>
    <item>
      <title>The newly redesigned Blogroll Club</title>
      <description>&lt;![CDATA[[star] ]]&gt;</description>
      <link>https://www.luisquintanilla.me/responses/newly-redesigned-blogroll</link>
      <guid>https://www.luisquintanilla.me/responses/newly-redesigned-blogroll</guid>
      <pubDate>2025-08-18 19:21 -05:00</pubDate>
      <category>blogrollclub</category>
      <category>blogroll</category>
      <category>indieweb</category>
      <category>socialweb</category>
    </item>
    <item>
      <title>FediCon 2025 Videos</title>
      <description>&lt;![CDATA[[bookmark] ]]&gt;</description>
      <link>https://www.luisquintanilla.me/responses/fedicon-2025-videos</link>
      <guid>https://www.luisquintanilla.me/responses/fedicon-2025-videos</guid>
      <pubDate>2025-08-18 18:53 -05:00</pubDate>
      <category>fediverse</category>
      <category>fedicon2025</category>
      <category>conference</category>
    </item>
    <item>
      <title>HOPE 16 Conference Videos</title>
      <description>&lt;![CDATA[[bookmark] ]]&gt;</description>
      <link>https://www.luisquintanilla.me/responses/hope-16-videos</link>
      <guid>https://www.luisquintanilla.me/responses/hope-16-videos</guid>
      <pubDate>2025-08-18 18:53 -05:00</pubDate>
      <category>hope</category>
      <category>hacker</category>
      <category>conference</category>
    </item>
    <item>
      <title>FediUrbanism â€” Johanna Botari â€” FediCon 2025</title>
      <description>&lt;![CDATA[[reshare] &lt;p&gt;I really enjoyed this talk by &lt;a href="https://cosocial.ca/@johannab"&gt;@johannab&lt;/a&gt; on the concept of FediUrbanism.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://spectra.video/w/f7GBsBf3nAhF8WfTMWUEXm" title="Thumbnail of FediUrbanism Talk Recording"&gt;&lt;img src="https://spectra.video/lazy-static/previews/40a5e4bd-f8d7-438a-b35c-0c81e753ddbd.jpg" class="img-fluid" alt="Thumbnail of FediUrbanism Talk Recording" /&gt;&lt;/a&gt;&lt;/p&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/responses/fediurbanism-fedicon-2025</link>
      <guid>https://www.luisquintanilla.me/responses/fediurbanism-fedicon-2025</guid>
      <pubDate>2025-08-18 18:36 -05:00</pubDate>
      <category>fediurbanism</category>
      <category>fedicon2025</category>
      <category>fediverse</category>
      <category>thirdspace</category>
      <category>community</category>
    </item>
    <item>
      <title>Deploy Owncast to Azure Container Apps with Persistent Storage</title>
      <description>&lt;![CDATA[&lt;h2&gt;Description&lt;/h2&gt;
&lt;p&gt;This guide shows how to deploy Owncast to Azure Container Apps with persistent storage, scale-to-zero capability, and proper SQLite compatibility to minimize costs while ensuring reliable operation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ultra-cost-optimized configuration (~$0.60/month for 4 hours of streaming)&lt;/li&gt;
&lt;li&gt;Full data persistence (users, chat, federation, configuration)&lt;/li&gt;
&lt;li&gt;Scale-to-zero capability when not streaming&lt;/li&gt;
&lt;li&gt;SQLite + Azure Files compatibility fixes&lt;/li&gt;
&lt;li&gt;RTMP + HTTP dual-port configuration for OBS Studio&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Azure CLI installed and logged in&lt;/li&gt;
&lt;li&gt;An Azure subscription&lt;/li&gt;
&lt;li&gt;A resource group created&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Step 1: Create Required Resources&lt;/h2&gt;
&lt;h3&gt;Create Storage Account for Persistent Data&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;# Set variables (choose cheapest regions)
RESOURCE_GROUP=&amp;quot;your-resource-group&amp;quot;
LOCATION=&amp;quot;centralus&amp;quot;  # Often cheaper than eastus
STORAGE_ACCOUNT=&amp;quot;owncaststorage$(date +%s)&amp;quot;  # Must be globally unique
CONTAINER_APP_ENV=&amp;quot;owncast-env&amp;quot;
CONTAINER_APP_NAME=&amp;quot;owncast-app&amp;quot;

# Create MINIMAL cost storage account
az storage account create \
  --name $STORAGE_ACCOUNT \
  --resource-group $RESOURCE_GROUP \
  --location $LOCATION \
  --sku Standard_LRS \
  --kind StorageV2 \
  --access-tier Cool \
  --allow-blob-public-access false \
  --https-only true \
  --min-tls-version TLS1_2

# Create file share with minimal provisioned size
az storage share create \
  --name &amp;quot;owncast-data&amp;quot; \
  --account-name $STORAGE_ACCOUNT \
  --quota 1  # Start with 1GB, scales automatically
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Create Container Apps Environment&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;# Create the Container Apps environment
az containerapp env create \
  --name $CONTAINER_APP_ENV \
  --resource-group $RESOURCE_GROUP \
  --location $LOCATION
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Step 2: Configure Storage Mount&lt;/h2&gt;
&lt;p&gt;Get the storage account key and create the storage mount:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get storage account key
STORAGE_KEY=$(az storage account keys list \
  --account-name $STORAGE_ACCOUNT \
  --resource-group $RESOURCE_GROUP \
  --query &amp;quot;[0].value&amp;quot; -o tsv)

# Create storage mount in the environment
az containerapp env storage set \
  --name $CONTAINER_APP_ENV \
  --resource-group $RESOURCE_GROUP \
  --storage-name &amp;quot;owncast-storage&amp;quot; \
  --azure-file-account-name $STORAGE_ACCOUNT \
  --azure-file-account-key $STORAGE_KEY \
  --azure-file-share-name &amp;quot;owncast-data&amp;quot; \
  --access-mode ReadWrite
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Step 3: Deploy Owncast Container App&lt;/h2&gt;
&lt;p&gt;Create the container app with persistent storage:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;az containerapp create \
  --name $CONTAINER_APP_NAME \
  --resource-group $RESOURCE_GROUP \
  --environment $CONTAINER_APP_ENV \
  --image &amp;quot;owncast/owncast:latest&amp;quot; \
  --target-port 8080 \
  --ingress external \
  --min-replicas 0 \
  --max-replicas 1 \
  --cpu 0.5 \
  --memory 1Gi \
  --volume-mount &amp;quot;data:/app/data&amp;quot; \
  --volume-name &amp;quot;data&amp;quot; \
  --volume-storage-name &amp;quot;owncast-storage&amp;quot; \
  --volume-storage-type AzureFile
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Step 4: Configure Dual-Port Ingress (HTTP + RTMP)&lt;/h2&gt;
&lt;p&gt;For Owncast to work properly, you need both HTTP (8080) and RTMP (1935) ports. This requires a &lt;strong&gt;Virtual Network (VNet)&lt;/strong&gt; integration:&lt;/p&gt;
&lt;h3&gt;Create VNet and Subnet&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;# Create MINIMAL virtual network (smallest possible address space)
az network vnet create \
  --name &amp;quot;owncast-vnet&amp;quot; \
  --resource-group $RESOURCE_GROUP \
  --location $LOCATION \
  --address-prefix &amp;quot;10.0.0.0/24&amp;quot;  # Smaller than default /16

# Create minimal subnet
az network vnet subnet create \
  --name &amp;quot;container-apps-subnet&amp;quot; \
  --resource-group $RESOURCE_GROUP \
  --vnet-name &amp;quot;owncast-vnet&amp;quot; \
  --address-prefix &amp;quot;10.0.0.0/27&amp;quot;  # Only 32 IPs instead of /23 (512 IPs)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Recreate Container Apps Environment with VNet&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get subnet ID
SUBNET_ID=$(az network vnet subnet show \
  --name &amp;quot;container-apps-subnet&amp;quot; \
  --vnet-name &amp;quot;owncast-vnet&amp;quot; \
  --resource-group $RESOURCE_GROUP \
  --query id -o tsv)

# Delete existing environment and recreate with VNet
az containerapp env delete \
  --name $CONTAINER_APP_ENV \
  --resource-group $RESOURCE_GROUP \
  --yes

# Create Container Apps environment with workload profiles DISABLED (cheapest option)
az containerapp env create \
  --name $CONTAINER_APP_ENV \
  --resource-group $RESOURCE_GROUP \
  --location $LOCATION \
  --infrastructure-subnet-resource-id $SUBNET_ID \
  --enable-workload-profiles false  # Forces consumption-only pricing
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Deploy Container App with MINIMAL Resources&lt;/h3&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;az containerapp create \
  --name $CONTAINER_APP_NAME \
  --resource-group $RESOURCE_GROUP \
  --environment $CONTAINER_APP_ENV \
  --image &amp;quot;owncast/owncast:latest&amp;quot; \
  --target-port 8080 \
  --exposed-port 1935 \
  --ingress external \
  --transport auto \
  --min-replicas 0 \
  --max-replicas 1 \
  --cpu 0.25 \
  --memory 0.5Gi \
  --volume-mount &amp;quot;data:/app/data&amp;quot; \
  --volume-name &amp;quot;data&amp;quot; \
  --volume-storage-name &amp;quot;owncast-storage&amp;quot; \
  --volume-storage-type AzureFile
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Cost-Optimized Resource Allocation:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt;: 0.25 cores (minimum allowed, sufficient for small streams)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt;: 0.5Gi (minimum allowed, will work for basic streaming)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scaling&lt;/strong&gt;: Aggressive scale-to-zero with max 1 replica&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Ultra Low-Cost Alternative YAML Configuration&lt;/h2&gt;
&lt;p&gt;For maximum cost optimization, use this YAML approach with the smallest possible resource allocation. This configuration includes critical SQLite compatibility fixes for Azure Files:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-yaml"&gt;# owncast-production-ready.yaml
properties:
  configuration:
    ingress:
      external: true
      targetPort: 8080
      additionalPortMappings:
      - external: true
        targetPort: 1935
        exposedPort: 1935
        transport: tcp
    secrets: []
  template:
    containers:
    - image: owncast/owncast:latest
      name: owncast-app
      resources:
        cpu: 0.25
        memory: 0.5Gi
      volumeMounts:
      - mountPath: /app/data
        volumeName: data
      env:
      - name: OWNCAST_RTMP_PORT
        value: &amp;quot;1935&amp;quot;
      - name: OWNCAST_WEBSERVER_PORT  
        value: &amp;quot;8080&amp;quot;
      - name: OWNCAST_DATABASE_FILE
        value: &amp;quot;/app/data/db/owncast.db&amp;quot;
      - name: OWNCAST_DATABASE_JOURNAL_MODE
        value: &amp;quot;DELETE&amp;quot;
      - name: OWNCAST_LOG_DIRECTORY
        value: &amp;quot;/app/data/logs&amp;quot;
      - name: OWNCAST_DATA_DIRECTORY
        value: &amp;quot;/app/data&amp;quot;
      - name: OWNCAST_HLS_DIRECTORY
        value: &amp;quot;/app/data/hls&amp;quot;
    scale:
      minReplicas: 0
      maxReplicas: 1
      rules:
      - name: &amp;quot;http-rule&amp;quot;
        http:
          metadata:
            concurrentRequests: &amp;quot;10&amp;quot;
    volumes:
    - name: data
      storageType: AzureFile
      storageName: owncast-storage
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Deploy with:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;az containerapp create \
  --name $CONTAINER_APP_NAME \
  --resource-group $RESOURCE_GROUP \
  --yaml owncast-production-ready.yaml
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Critical Configuration Notes&lt;/h2&gt;
&lt;h3&gt;SQLite + Azure Files Compatibility Fix&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: The default Owncast configuration can cause &amp;quot;database is locked&amp;quot; errors when using Azure Files storage due to SQLite's WAL (Write-Ahead Logging) mode being incompatible with network file systems. The configuration above includes these critical fixes:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Database Subdirectory&lt;/strong&gt;: &lt;code&gt;OWNCAST_DATABASE_FILE=/app/data/db/owncast.db&lt;/code&gt; - Places database in a subdirectory which improves Azure Files compatibility&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Journal Mode Override&lt;/strong&gt;: &lt;code&gt;OWNCAST_DATABASE_JOURNAL_MODE=DELETE&lt;/code&gt; - Forces SQLite to use DELETE mode instead of WAL mode to prevent file locking issues&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Full Data Mount&lt;/strong&gt;: Mounts entire &lt;code&gt;/app/data&lt;/code&gt; directory for complete persistence of logs, database, and HLS content&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;What Gets Persisted&lt;/h3&gt;
&lt;p&gt;With this configuration, the following data persists across container restarts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;User accounts and chat history&lt;/strong&gt; (critical for community continuity)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stream keys and admin credentials&lt;/strong&gt; (prevents reconfiguration)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ActivityPub federation data&lt;/strong&gt; (maintains Mastodon/Fediverse followers)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server customization and branding&lt;/strong&gt; (logos, site name, descriptions)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;API tokens and webhook configurations&lt;/strong&gt; (third-party integrations)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Complete logs and HLS video segments&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Without proper persistence, you would lose all users, followers, and configuration on every container restart.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Cost Optimization Features&lt;/h2&gt;
&lt;h3&gt;Scale-to-Zero Configuration&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Min Replicas&lt;/strong&gt;: Set to 0 to completely scale down when not in use&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Max Replicas&lt;/strong&gt;: Set to 1 (Owncast doesn't need horizontal scaling)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scale Rules&lt;/strong&gt;: Container Apps will automatically scale up when requests arrive&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Resource Limits (Ultra Cost-Optimized)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt;: 0.25 cores (absolute minimum, sufficient for 1-2 viewer streams)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt;: 0.5Gi (minimum allowed by Azure Container Apps)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt;: Cool tier with 1GB initial quota (auto-scales as needed)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Network&lt;/strong&gt;: Minimal VNet addressing to reduce overhead&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;OBS Configuration&lt;/h2&gt;
&lt;p&gt;After deployment, configure OBS for streaming:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Server Settings&lt;/strong&gt;: Use &lt;code&gt;rtmp://your-app-url:1935/live&lt;/code&gt; (note: &lt;code&gt;rtmp://&lt;/code&gt; not &lt;code&gt;https://&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Stream Key&lt;/strong&gt;: Use the key from Owncast admin panel (Configuration &amp;gt; Server Setup &amp;gt; Stream Keys)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Owncast Web Interface&lt;/strong&gt;: Access at &lt;code&gt;https://your-app-url&lt;/code&gt; (port 8080 is handled automatically by ingress)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Persistent Data&lt;/strong&gt;: All Owncast configuration, database, and uploaded files are stored in Azure Files and persist across container restarts and scale-to-zero events. &lt;strong&gt;Critical&lt;/strong&gt;: Uses SQLite DELETE journal mode to prevent &amp;quot;database is locked&amp;quot; errors with Azure Files.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Cold Start&lt;/strong&gt;: When scaling from zero, there will be a 10-15 second cold start delay as the container initializes. This is normal and acceptable for personal streaming.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;VNet Requirement&lt;/strong&gt;: For dual-port access (HTTP + RTMP), you &lt;strong&gt;must&lt;/strong&gt; use a Virtual Network integration. This is a requirement for exposing additional TCP ports in Azure Container Apps.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Database Compatibility&lt;/strong&gt;: The configuration includes specific environment variables (&lt;code&gt;OWNCAST_DATABASE_JOURNAL_MODE=DELETE&lt;/code&gt;) to ensure SQLite works properly with Azure Files network storage. Without these settings, you'll experience database crashes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Security Configuration&lt;/strong&gt;: After deployment, immediately change the default admin credentials:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to &lt;code&gt;https://your-app-url/admin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Default login: &lt;code&gt;admin&lt;/code&gt; / &lt;code&gt;abc123&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Go to Configuration &amp;gt; Server Setup and change the admin password&lt;/li&gt;
&lt;li&gt;Create/copy stream keys from Configuration &amp;gt; Server Setup &amp;gt; Stream Keys tab&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Custom Domain&lt;/strong&gt;: You can configure a custom domain using:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;az containerapp hostname add \
  --name $CONTAINER_APP_NAME \
  --resource-group $RESOURCE_GROUP \
  --hostname &amp;quot;your-domain.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;SSL Certificate&lt;/strong&gt;: Azure Container Apps provides automatic SSL certificates for custom domains.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Monitoring and Troubleshooting&lt;/h2&gt;
&lt;p&gt;Check your deployment:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get the URL
az containerapp show \
  --name $CONTAINER_APP_NAME \
  --resource-group $RESOURCE_GROUP \
  --query properties.configuration.ingress.fqdn

# Test RTMP port connectivity (should return TcpTestSucceeded: True)
Test-NetConnection -ComputerName &amp;quot;your-app-url&amp;quot; -Port 1935 -InformationLevel Detailed

# Test web interface
curl -I https://your-app-url/

# View logs
az containerapp logs show \
  --name $CONTAINER_APP_NAME \
  --resource-group $RESOURCE_GROUP
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Common Issues and Solutions&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Problem&lt;/strong&gt;: Container logs show &amp;quot;database is locked&amp;quot; errors and crashes
&lt;strong&gt;Solution&lt;/strong&gt;: Ensure you're using the configuration above with &lt;code&gt;OWNCAST_DATABASE_JOURNAL_MODE=DELETE&lt;/code&gt; and database in a subdirectory&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem&lt;/strong&gt;: OBS shows &amp;quot;Failed to connect to server&amp;quot;&lt;br /&gt;
&lt;strong&gt;Solution&lt;/strong&gt;: Verify RTMP port 1935 is accessible using &lt;code&gt;Test-NetConnection&lt;/code&gt; and ensure you're using VNet integration&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem&lt;/strong&gt;: Admin panel won't load or shows errors
&lt;strong&gt;Solution&lt;/strong&gt;: Database persistence issues - check that the &lt;code&gt;/app/data&lt;/code&gt; mount is working and SQLite journal mode is set correctly&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem&lt;/strong&gt;: Container scales to zero but doesn't start properly
&lt;strong&gt;Solution&lt;/strong&gt;: Cold start delay is normal (10-15 seconds). If it doesn't start, check environment variable configuration&lt;/p&gt;
&lt;h2&gt;Cost Estimation (Ultra-Optimized)&lt;/h2&gt;
&lt;p&gt;With these optimizations, your monthly costs should be:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;When Streaming (4 hours/month example):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Compute&lt;/strong&gt;: ~$0.50/month (0.25 CPU + 0.5Gi RAM Ã— 4 hours)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Container Apps Environment&lt;/strong&gt;: ~$0.00 (consumption plan, no dedicated resources)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Networking&lt;/strong&gt;: ~$0.05/month (minimal VNet overhead)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;When Idle (Scale-to-Zero):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Compute&lt;/strong&gt;: $0.00 (scaled to zero)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Environment&lt;/strong&gt;: $0.00 (consumption plan)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Always-On Costs:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt;: ~$0.05-0.10/month (1-2GB in Cool tier)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VNet&lt;/strong&gt;: ~$0.00 (no gateways or dedicated resources)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Total Monthly Cost: ~$0.60-0.65/month&lt;/strong&gt; (assuming 4 hours of streaming)&lt;/p&gt;
&lt;h3&gt;Performance Expectations at Minimal Resources:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;0.25 CPU + 0.5Gi RAM&lt;/strong&gt;: Suitable for 480p-720p streams with 1-5 concurrent viewers&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scale-up Path&lt;/strong&gt;: Monitor performance and increase to 0.5 CPU + 1Gi if needed&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cold Start&lt;/strong&gt;: ~10-15 seconds when scaling from zero (acceptable for personal streaming)&lt;/li&gt;
&lt;/ul&gt;
]]&gt;</description>
      <link>https://www.luisquintanilla.me/resources/snippets/owncast-optimized-azure-deployment-guide</link>
      <guid>https://www.luisquintanilla.me/resources/snippets/owncast-optimized-azure-deployment-guide</guid>
      <pubDate>2025-08-14 13:35 -05:00</pubDate>
      <category>owncast</category>
      <category>fediverse</category>
      <category>azure</category>
      <category>livestream</category>
    </item>
  </channel>
</rss>