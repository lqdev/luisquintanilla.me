<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>Luis Quintanilla - manjaro</title>
    <link>https://www.lqdev.me/tags/manjaro</link>
    <description>All content tagged with 'manjaro' by Luis Quintanilla</description>
    <lastBuildDate>12/11/2022 18:56 -05:00</lastBuildDate>
    <language>en</language>
    <item>
      <title>Configure opacity - Manjaro</title>
      <description>&lt;![CDATA[&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;This article shows how to configure background opacity for the kitty terminal emulator using picom and i3.&lt;/p&gt;
&lt;p&gt;By defaut, i3 doesn't support composting. Programs like picom add support for it.&lt;/p&gt;
&lt;p&gt;In addition, terminal emulators like kitty are hardware accelerated which means there's opportunities to offload from the CPU and save power.&lt;/p&gt;
&lt;h2&gt;Install &amp;amp; configure picom&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install picom&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo pacman -S picom
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Move default configuration file to &lt;em&gt;~/.config/picom/picom.conf&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Define opacity rule:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;opacity-rule = [&amp;quot;90:class_g = 'kitty'&amp;quot;];
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Save changes&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Install &amp;amp; configure kitty&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install picom&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo pacman -S kitty
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Move default configuration file to &lt;em&gt;~/.config/kitty/kitty.conf&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set background opacity:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;background_opacity 0.90
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Save changes&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Configure i3&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Open your i3 configuration and add the following line to it:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;exec_always picom
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Restart i3.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/title/Picom#Opacity"&gt;Picom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/title/Kitty"&gt;Kitty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/i3wm/comments/g62qy0/kitty_terminal_emulator_transparency_not_working/"&gt;Kitty emulator not working - Reddit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/resources/wiki/configure-opacity-manjaro</link>
      <guid>https://www.lqdev.me/resources/wiki/configure-opacity-manjaro</guid>
      <pubDate>12/11/2022 18:56 -05:00</pubDate>
      <category>i3</category>
      <category>wm</category>
      <category>linux</category>
      <category>manjaro</category>
      <category>kitty</category>
      <category>terminal</category>
      <category>wiki</category>
      <category>configuration</category>
      <category>picom</category>
    </item>
    <item>
      <title>Intel GPU Tools - Linux</title>
      <description>&lt;![CDATA[&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;This article talks about Intel GPU tools for Linux to monitor usage of integrated Intel GPUs&lt;/p&gt;
&lt;h2&gt;When to use&lt;/h2&gt;
&lt;p&gt;The scenarios in which I've used this tool is to confirm that my browser is leveraging hardware acceleration. By default, Firefox doesn't enable hardware acceleration on Linux. As a result, everything runs on the CPU causing unnecessary load and faster battery drain. To alleviate that, you can enable hardware acceleration and make sure that the GPU is being used by running tools like &lt;code&gt;intel_gpu_top&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Install&lt;/h2&gt;
&lt;p&gt;To install the tools, run the following command&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo pacman -S intel-gpu-tools
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Run intel_gpu_top&lt;/h2&gt;
&lt;p&gt;To view GPU activity, run the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo intel_gpu_top
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will display process graphs of GPU usage.&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/title/Intel_graphics"&gt;Intel Grapics - Arch Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://archlinux.org/packages/community/x86_64/intel-gpu-tools/"&gt;Intel GPU Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://support.mozilla.org/en-US/kb/upgrade-graphics-drivers-use-hardware-acceleration"&gt;Firefox hardware acceleration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://support.mozilla.org/en-US/kb/performance-settings"&gt;Firefox Performance Settings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/resources/wiki/intel-gpu-tools</link>
      <guid>https://www.lqdev.me/resources/wiki/intel-gpu-tools</guid>
      <pubDate>12/11/2022 18:05 -05:00</pubDate>
      <category>linux</category>
      <category>intel</category>
      <category>gpu</category>
      <category>manjaro</category>
      <category>performances</category>
    </item>
    <item>
      <title>Hardware Video Acceleration - Linux</title>
      <description>&lt;![CDATA[&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;This article talks about using hardware video acceleration so the video card encodes/decodes video offloading the CPU and saving power.&lt;/p&gt;
&lt;h2&gt;Install intel-media-driver&lt;/h2&gt;
&lt;p&gt;To install the Intel media driver&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo pacman -S intel-media-driver
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Enable acceleration MPV&lt;/h2&gt;
&lt;p&gt;For mpv, make sure that decoding and video acceleration is enabled. To do so:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create or edit the user config file in &lt;em&gt;~/.config/mpv/mpv.conf&lt;/em&gt; with the following settings:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;vo=gpu
hwdec=auto
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reboot your PC.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Verification&lt;/h2&gt;
&lt;p&gt;Use &lt;code&gt;intel_gpu_top&lt;/code&gt; and make sure that when you play video using tools like VLC or MPV, the video bar is active.&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/title/Hardware_video_acceleration"&gt;Hardware Video Acceleration - Intel GPU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lqdev.me/resources/wiki/intel-gpu-tools"&gt;Intel GPU Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mpv-player/mpv/blob/master/etc/mpv.conf"&gt;Sample MPV Conf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mpv.io/manual/master/#configuration-files"&gt;MPV Configuration Files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/resources/wiki/video-hardware-acceleration-linux</link>
      <guid>https://www.lqdev.me/resources/wiki/video-hardware-acceleration-linux</guid>
      <pubDate>12/11/2022 17:36 -05:00</pubDate>
      <category>performance</category>
      <category>wiki</category>
      <category>hardware</category>
      <category>video</category>
      <category>hardwareacceleration</category>
      <category>linux</category>
      <category>arch</category>
      <category>manjaro</category>
    </item>
    <item>
      <title>Power Management Manjaro</title>
      <description>&lt;![CDATA[&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;The following shows how you can optimize your computer using Powertop to generate runing recommendations and apply those optimizations at boot using an rc-local service.&lt;/p&gt;
&lt;h2&gt;Powertop&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install powertop&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo pacman -S powertop
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run powertop report (on battery power)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo powertop -r
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After a few seconds, a file called &lt;em&gt;powertop.html&lt;/em&gt; is created.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open the &lt;em&gt;powertop.html&lt;/em&gt; file in your browser and inspect the &lt;strong&gt;Tuning&lt;/strong&gt; tab for tuning recommendations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Configure rc-local service&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create &lt;em&gt;rc.local&lt;/em&gt; file in &lt;code&gt;/etc&lt;/code&gt; directory with the following content&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;#!/bin/sh -e

echo &amp;quot;Hello World&amp;quot;

# Insert powertop optimization scripts here. 

exit 0
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create &lt;em&gt;rc-local.service&lt;/em&gt; file in &lt;code&gt;/etc/systemd/system&lt;/code&gt; directory with the following content&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;#  This file is part of systemd.
#
#  systemd is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.

[Unit]
Description=/etc/rc.local Compatibility
ConditionPathExists=/etc/rc.local

[Service]
Type=oneshot
ExecStart=/etc/rc.local
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Enable and start rc-local service&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo systemctl enable rc-local
sudo systemctl start rc-local
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Confirm that the service has successfully started&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo systemctl status rc-local
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/title/Powertop"&gt;Arch Wiki - Powertop&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/resources/wiki/power-management-manjaro</link>
      <guid>https://www.lqdev.me/resources/wiki/power-management-manjaro</guid>
      <pubDate>12/11/2022 16:15 -05:00</pubDate>
      <category>manjaro</category>
      <category>bash</category>
      <category>powermanagement</category>
      <category>tech</category>
      <category>wiki</category>
      <category>linux</category>
    </item>
    <item>
      <title>Install Manjaro RTL8821CE WiFi drivers</title>
      <description>&lt;![CDATA[
Until recently, I was usign an HP ProBook 430 G1 with Manjaro and a Surface Go (1st Gen) for my computing needs. To cut down on the devices I used, I purchased an [ASUS L210MA](https://www.asus.com/us/laptops/for-home/everyday-use/asus-l210/) which is about the size of the Surface Go but I can run Manjaro on it. Although it doesn't have the same storage or compute power as the ProBook, I've set up a VM in Azure I can use for those instances where I need more compute power than the ASUS laptop can provide. As is sometimes the case, when you install Linux on a new PC, you have to install the right drivers to use your WiFi and other peripheral devices. In this guide I'll show how to install the RTL-8821-CE WiFi drivers.

## Prerequisites

The instructions on this guide were run on a Manjaro XCFE 21.2.6.

## Enable AUR and Install yay

The WiFi drivers you'll need are hosted in the [Arch User Repository (AUR)](https://aur.archlinux.org/). Before installing any packages, you'll have to enable it on your PC. To do so, install the `yay` AUR helper package by running the following command in the terminal:

```bash
sudo pacman -S git
git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si
```

## Install Kernel Headers

The first thing yuo'll need to install are your kernel headers. To check which version of the kernel you're using, run the following command in the terminal:

```bash
uname -r
```

The output should look similar to the following:

```text
5.15.41-1-MANJARO
```

The first two values are your major kernel version. For example, in the output above the kernel version is 5.15.

To install the kernel headers, run the following command in the terminal:

```bash
sudo pacman -S linux-headers
```

Make sure that the kernel version that's installed is the same as the one output after running the `uname -r` command. 

## Install RTL8821CE drivers

Once you've installed the headers, it's time to install the WiFi drivers. Use `yay` to run the following command in the terminal:

```bash
yay -S rtl8821ce-dkms-git
```

After some time, the packages should be installed on your device. Reboot your PC and you should now be able to connect to the internet wirelessly]]&gt;</description>
      <link>https://www.lqdev.me/posts/install-rtl8821ce-manjaro</link>
      <guid>https://www.lqdev.me/posts/install-rtl8821ce-manjaro</guid>
      <pubDate>06/11/2022 15:48 -05:00</pubDate>
      <category>networking</category>
      <category>manjaro</category>
      <category>linux</category>
    </item>
    <item>
      <title>Install OverDrive Media Console on Manjaro</title>
      <description>&lt;![CDATA[
## Introduction

For the last few months, Manjaro has been the operating system I use as my daily driver for personal tasks. I still have my Surface Go tablet which runs Windows 10 that I use for tasks line syncing my Garmin watch and GPS. On one of the [posts in my feed](/notes/ipod-touch-discontinued), I briefly mentioned my audio solution for podcasts and audiobooks which mainly consists of a standalone MP3 player ([FiiO M6](https://fiio.com/m6)). 

For podcasts, I manage them through my [NewsBlur RSS feed reader](https://newsblur.com/). When I want to download them for offline listening, I've written a .NET console app ([podnet](https://github.com/lqdev/podnet)) to manage that process for me. Audiobooks are a little trickier. Public domain works I get through [Librivox](https://librivox.org/). The limitation there though is that I'm only public domain works are available. Therefore if I want other audiobooks, I either have to purchase them (which has its own issues because of DRM) or borrow them from my local library. I prefer to borrow my books and audiobooks from the library. Not only am I supporting my local library but I also save money in the process. 

Many libraries including my own manage digital assets through [OverDrive](https://www.overdrive.com/). OverDrive offers a variety of ways for transferring books and audiobooks to your devices. Linux however is not one of those solutions. Until February 2022, OverDrive provided a Windows desktop application (OverDrive Media Console) for managing books and audiobooks. Although there is no Linux desktop application, Linux has Wine. [Wine](https://www.winehq.org/) according to their website is "...a compatibility layer capable of running Windows applications on several POSIX-compliant operating systems, such as Linux, macOS, &amp; BSD.". 

In this post, I'll show how you can use Wine to install OverDrive Media Console on a PC running the Manjaro Linux distribution. 

## Install Wine

In order to install OverDrive Media Console, you'll need to install Wine. To do so:

1. Open the terminal.
1. Install Wine and all its dependencies with the following command:

    ```bash
    sudo pacman -S wine winetricks wine-mono wine_gecko
    ``` 

## Install OverDrive Media Console

The next step is to install the OverDrive Media Console application for Windows desktop. 

1. Download the latest version of [OverDrive Media Console for Windows Desktop application](https://www.overdrive.com/apps/overdrive./). This should be a Microsoft Installer file with the `.msi` extension. Note that as of February 2022, the desktop application is [no longer available for install](https://help.overdrive.com/en-us/0733.html?tocpath=Home%7CGet%20help%20with%20the%20OverDrive%20app%7CWindows%20(desktop)%7C_____7).
1. Open the terminal and use Wine to install OverDrive Media Console with the following command:

    ```bash
    wine msiexec /i ODMediaConsoleSetup.msi
    ```

    Update the name of the `.msi` file as needed.  

## Run OverDrive Media Console

Once the installation is complete, OverDrive Media Console should be in your list of applications. Run it as you would any other app. 

![OverDrive Media Console running on Manjaro Linux](https://user-images.githubusercontent.com/11130940/167964715-bb8bfb21-5f72-4a86-9fb0-33c9d1fe9eae.png)

Here's a guide for information on getting started with [OverDrive](https://help.overdrive.com/en-us/categories/getting-started.htm).]]&gt;</description>
      <link>https://www.lqdev.me/posts/overdrive-wine-manjaro</link>
      <guid>https://www.lqdev.me/posts/overdrive-wine-manjaro</guid>
      <pubDate>05/11/2022 19:22 -05:00</pubDate>
      <category>linux</category>
      <category>books</category>
      <category>audiobooks</category>
      <category>manjaro</category>
    </item>
  </channel>
</rss>