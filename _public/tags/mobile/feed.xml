<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>Luis Quintanilla - mobile</title>
    <link>https://www.lqdev.me/tags/mobile</link>
    <description>All content tagged with 'mobile' by Luis Quintanilla</description>
    <lastBuildDate>2025-08-14 01:45 -05:00</lastBuildDate>
    <language>en</language>
    <item>
      <title>Mobile-First Static Site Publishing: Discord Bot Pipeline via Azure and GitHub</title>
      <description>&lt;![CDATA[
## The problem

Ever since I published my [first note](/notes/hello-world)([microblog post](https://indieweb.org/note)) on my website, I've always wanted a way to quickly publish while on the go. Unfortunately, I never found a good solution. 

Because my website is statically generated and the source is hosted on GitHub(check out the [colophon](/colophon) for more details), there is no backend for me to talk to. At the same time, I didn't want to build an entire backend to support my website because I want to keep things as lean and cost-efficient as possible. 

Since my posts are just frontmatter and Markdown, I [use VS Code as my editor](/uses). For some time, back when I used to have a Surface Duo, I [authored posts from mobile using the github.dev experience](https://www.lqdev.me/notes/surface-duo-blogging-github-dev). On two screens, while not ideal, it was manageable. After switching devices (because sadly there were no more security updates on the Surface Duo) and upgrading to a dumbphone and later a single screen smartphone, that workflow wasn't feasible.

At that point, what I resorted to was sending messages to myself via [Element](https://element.io/). The message would contain a link I wanted to check out later. Once I was on my laptop, I would check out the link and if I wanted to post about it on my website, I'd do so then. 

That process, while it worked, wasn't necessarily scalable. In part that's a feature because I could spend more time digesting the content and writing a thoughtful article. However, it stopped me from sharing more in the moment and there were posts that were never authored or bookmarks that weren't captured because eventually that link got lost in the river of other links. 

Basically what I wanted to replicate was the more instant posting that social media gives you, but do so on my own site. 

That led me to doing some thinking and requirement gathering around the type of experience I wanted to have.

## Requirements

When it came to requirements for my solution, I was focused more on the workflow and experience rather on technical details. 

Here is a list of those solution requirements:

- Mobile is the primary publishing interface. Desktop publishing is a nice to have.
- Be as low-friction as sharing a link via Element or posting on social media
- Doesn't require implementing my own client or frontend
- Doesn't require me to use existing micropub clients
- Handles short-form and media posts supported by my website
    - Notes
    - Responses
        - Repost
        - Reply
        - Like
    - Bookmark
    - Media
        - Image
        - Audio (not used as often but technically supported)
        - Video (not used as often but technically supported)
- Low-cost

## The solution

For years, I had been struggling with actually implementing this system. The main part that gave me pause was not implementing my own client or relying on existing micropub clients. 

Eventually, I just accepted that it might never happen. 

One day, it eventually hit me. If the notes to self Element workflow worked so well, why not use a chat client as the frontend for publishing. At least have it serve as the capture system that would then format the content into a post that gets queued for publishing on GitHub. I'd seen [Benji do something similar with his micropub endpoint](https://github.com/benjifs/serverless-micropub). 

While I could've used Element since that's my preferred platform, I've been contemplating no longer hosting my own Matrix server. So if I went through with this, I'd want something that I didn't feel bad about investing the time on this solution if that chat client went away. 

That then left me with Discord as the next best option. Primarily because of its support for bots as well as its cross-platform support across mobile and desktop. 

In the end, the solution then ended up being fairly straightforward. 

More importantly, with the help of AI, I wrote none of the code. 

Using Copilot and Claude Sonnet 4, I was able to go from idea to deployment in 1-2 days. At that time the solution supported all of the posts except for media which I hadn't figured out what the best way of uploading media through Discord was. Figuring that out, implementing it, and deploying it took another day or two. 

Since I wanted for my solution to be as low-cost as possible, serverless seemed like a good option. I only pay for compute when it's actually being used which can be infrequent in my case. I don't need the server running 24/7 or even to be powerful. However, I didn't want to write my system as an Azure Function. I wanted the flexibility of deploying on a shared VM or container. A VM though wasn't an option since it's running 24/7. Keeping all of that in mind, my choice was narrowed down to Azure Container Apps which gave me the characteristics I was looking for. Serverless containers. 

Once that decision was made, I used Copilot again to figure out how to optimize my container image so that it's space and resource efficient. And while at it, I used Copilot again to figure out the right incantations to get the container deployed to Azure Container Apps. 

All-in-all, the solution had been staring at me in the face since I already had a workflow that for the most part worked for me, it just needed some optimizations and with the help of AI, I was able to quickly build and deploy something I'd been ruminating over for years.  

## Workflow

The workflow for publishing is as follows:

1. Invoke the bot in Discord to capture my input using slash command `/post` and the respective post type.

    ![Using slash commands to invoke discord publishing bot](http://cdn.lqdev.tech/files/images/invoke-discord-publishing-bot.png)

1. Provide post details. For media posts, I can provide an attachment which gets uploaded to Azure Blob Storage.

    ![A modal in discord with note post fields filled in](http://cdn.lqdev.tech/files/images/discord-publishing-client-modal.png)

1. [Bot creates a branch and PR in my repo](https://github.com/lqdev/luisquintanilla.me/pull/152) with the post content
1. While logged into GitHub from my phone, if everything looks good, I merge the PR which kicks off my GitHub Actions workflow to build and publish the site including the new post. 
1. Post [displays on my website](/media/test-media-post-from-mobile/).

## Challenges

The solution is not perfect. 

One of the problems I've run into is cold-start. Since I scale my solution down to zero when it's not being used to save on costs, I suffer from the cold start problem. Therefore, when I first invoke the bot, it fails. I have to give it a few seconds and retry the invocation. It's usually about 5 seconds so it's not a huge issue but it does add some friction. 

## Next steps

Overall I'm happy with my solution but there are a few improvements I'd like to make.

- **Open-source the repo** - Currently I've kept the repo private since it was all AI generated. Since my system is already in production and processes were documented, I need to do a more thorough pass to make sure that no secrets or credentials are checked in or documented anywhere.
- **Improve UX** - Discord limits modal fields to 5. Therefore, I'm playing around with the right balance between how much of the input should come from slash commands and how much should come from the modal.
- **Expand supported post types** - I'd like to expand the number of posts supported by my publishing client. Reviews are a good example of the type of post I'd like to support as well as RSVPs. [Reviews I already support](https://www.lqdev.me/reviews) on my website but RSVPs I don't yet. Also, I'd have to fix my Webmentions which are currently broken after [upgrading my website](/notes/hello-world-new-site-2025-08/). 
- **Make it generator agnostic** - Currently this only works for my website. With a few tweaks and refactoring, I think I can get the project to a place where it should work with other popular static site generators. 
- **One-click deployment** - Currently the solution is packaged up as a container so it can be deployed from anywhere. I want to make it even simpler to deploy. One click if possible. 

]]&gt;</description>
      <link>https://www.lqdev.me/posts/website-mobile-publishing-discord-client</link>
      <guid>https://www.lqdev.me/posts/website-mobile-publishing-discord-client</guid>
      <pubDate>2025-08-14 01:45 -05:00</pubDate>
      <category>discord</category>
      <category>azure</category>
      <category>indieweb</category>
      <category>mobile</category>
      <category>microblogging</category>
      <category>web</category>
      <category>bot</category>
      <category>aca</category>
      <category>azurecontainerapps</category>
    </item>
    <item>
      <title>Test media post from mobile</title>
      <description>&lt;![CDATA[Album containing 0 photos]]&gt;</description>
      <link>https://www.lqdev.me/media/test-media-post-from-mobile</link>
      <guid>https://www.lqdev.me/media/test-media-post-from-mobile</guid>
      <pubDate>2025-08-12 22:40 -05:00</pubDate>
      <category>mobile</category>
      <category>blog</category>
      <category>indieweb</category>
    </item>
    <item>
      <title>T-Mobile Sidekickâ€™s Jump button made mobile multitasking easy</title>
      <description>&lt;![CDATA[[reshare] &lt;p&gt;Bring back the Sidekick! &lt;a href="https://www.lqdev.me/notes/ayaneo-slide"&gt;Ayaneo Slide&lt;/a&gt; is probably the closest to this today. Would love to see a &lt;a href="https://www.lqdev.me/responses/windows-12-mobile-concept/"&gt;smaller version of it running on Windows on ARM-based Snapdragon processors&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;Before the iPhone, before Android, before webOS, a revolutionary soap bar of a phone made it incredibly easy to get shit done. The Danger Hiptop, better known as the T-Mobile Sidekick, made the internet portable and affordable like no phone before.&lt;/p&gt;
&lt;/blockquote&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/responses/tmobile-sidekick-jump-button-mobile-productivity</link>
      <guid>https://www.lqdev.me/responses/tmobile-sidekick-jump-button-mobile-productivity</guid>
      <pubDate>2024-04-01 20:27 -05:00</pubDate>
      <category>tmobile</category>
      <category>nostalgia</category>
      <category>sidekick</category>
      <category>tmobile</category>
      <category>phones</category>
      <category>smartphones</category>
      <category>productivity</category>
      <category>mobile</category>
      <category>cellphones</category>
      <category>handhelds</category>
    </item>
    <item>
      <title>Windows 12 Mobile - Concept</title>
      <description>&lt;![CDATA[[reply] &lt;p&gt;Cool concept.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=XhwFp6lMOcQ" title="Windows 12 Mobile Concept Video"&gt;&lt;img src="http://img.youtube.com/vi/XhwFp6lMOcQ/0.jpg" class="img-fluid" alt="Windows 12 Mobile Concept Video" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The likelihood of it happening is low, but there's a lot of really great opportunities here especially with &lt;a href="https://www.lqdev.me/posts/quick-thoughts-snapdragon-summit-2023"&gt;the new wave or ARM PCs coming&lt;/a&gt;. I don't know what the device form factor looks like, but I wouldn't mind carrying around a pocket PC - a true mobile computer. Already with the Windows Store, you have access to tons of apps. For the apps that aren't in the Store, there's the browser. That seemed to be good enough for &lt;a href="https://www.lqdev.me/responses/vision-pros-most-important-app-safari"&gt;Apple's Vision Pro&lt;/a&gt;. Taking it a step further would the app gap matter as much if you have Copilot as your concierge orchestrating tasks for you using the various services? Better yet, what if these services had their own assistants / GPTs Copilot could talk to and coordinate on your behalf?&lt;/p&gt;
&lt;p&gt;At some point, I might just use &lt;a href="https://www.lqdev.me/responses/openai-sora"&gt;OpenAI's Sora model&lt;/a&gt; to live vicariously through an AI-generated video depicting this alternate reality where Windows Phone exists...&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/responses/windows-12-mobile-concept</link>
      <guid>https://www.lqdev.me/responses/windows-12-mobile-concept</guid>
      <pubDate>2024-02-21 14:59 -05:00</pubDate>
      <category>windows</category>
      <category>mobile</category>
      <category>windowsphone</category>
      <category>pc</category>
    </item>
    <item>
      <title>Replacing apps with websites</title>
      <description>&lt;![CDATA[[reply] &lt;blockquote class="blockquote"&gt;
&lt;p&gt;I woke up today...and decided I was going to delete all the apps off my iPhone.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;If I didnâ€™t need it to do a specialized function? Gone, poof. I decided to just use websites and bookmarks instead.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;The websites worked just fine.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;...websites are just badly designed these days, especially with using a screen reader on a mobile device. I canâ€™t quite describe it, because mobile web browsers arenâ€™t really well designed either, so it makes the website worse because it doesnâ€™t even render all elements as smoothly as on desktop.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;Even though there are problems, Iâ€™m honestly glad I deleted almost all my apps off my phone and started to pin websites to my home screen more. For one thing, it cuts down on notifications. itâ€™s super freeing to not get a random notification because you didnâ€™t open the app in a day, so the app pings you to say hey Iâ€™m still here please pay attention to me, I feel lonely, and nobody will give me animals to snuggle with.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;With pinned websites, my phone is faster and my home screen is much more organized as well.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I did this a few years ago. Websites work just fine for almost everything I need to do. The main benefits I noticed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Less distractions&lt;/li&gt;
&lt;li&gt;More real estate when viewing websites on laptop / desktop&lt;/li&gt;
&lt;li&gt;Less apps to drain the battery when running on the background&lt;/li&gt;
&lt;li&gt;More restricted access / permissions (i.e. websites don't need unrestricted access to my contacts or other information on my phone)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Better PWA support on mobile platforms would go a long way here to better balance between apps and websites. In the meantime though, pinning websites and websites overall work just fine for most things I need to do day-to-day.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/responses/replacing-apps-websites-kingett</link>
      <guid>https://www.lqdev.me/responses/replacing-apps-websites-kingett</guid>
      <pubDate>2024-01-09 09:37 -05:00</pubDate>
      <category>apps</category>
      <category>websites</category>
      <category>internet</category>
      <category>mobile</category>
    </item>
  </channel>
</rss>