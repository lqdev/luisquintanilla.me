<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>Luis Quintanilla - terminal</title>
    <link>https://www.lqdev.me/tags/terminal</link>
    <description>All content tagged with 'terminal' by Luis Quintanilla</description>
    <lastBuildDate>2023-09-10 10:35 -05:00</lastBuildDate>
    <language>en</language>
    <item>
      <title>textual-web</title>
      <description>&lt;![CDATA[[bookmark] &lt;blockquote class="blockquote"&gt;
&lt;p&gt;Textual Web publishes Textual apps and terminals on the web.&lt;/p&gt;
&lt;/blockquote&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/bookmarks/textualize-textual-web</link>
      <guid>https://www.lqdev.me/bookmarks/textualize-textual-web</guid>
      <pubDate>2023-09-10 10:35 -05:00</pubDate>
      <category>tui</category>
      <category>terminal</category>
      <category>web</category>
    </item>
    <item>
      <title>Hacking the Planet (with Notcurses) - A Guide to TUIs and Character Graphics</title>
      <description>&lt;![CDATA[[bookmark] &lt;blockquote class="blockquote"&gt;
&lt;p&gt;A TUI (text user interface) is a holistic model, view, and controller implemented using character graphics.
TUIs, like WIMP3 GUIs, freely move the cursor around their rectilinear display, as opposed to line-oriented
CLIs and their ineluctable marches through the scrolling region.
Given the same interactive task&lt;/p&gt;
&lt;p&gt;• A TUI implementation is almost certainly a smaller memory and disk footprint than a GUI,&lt;br /&gt;
• a good TUI implementation might introduce less latency, and&lt;br /&gt;
• a properly-done TUI implementation can often be significantly more portable.&lt;/p&gt;
&lt;/blockquote&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/bookmarks/hack-the-planet-notcurses-tuis</link>
      <guid>https://www.lqdev.me/bookmarks/hack-the-planet-notcurses-tuis</guid>
      <pubDate>2023-07-12 22:21 -05:00</pubDate>
      <category>linux</category>
      <category>terminal</category>
      <category>tui</category>
    </item>
    <item>
      <title>Configure opacity - Manjaro</title>
      <description>&lt;![CDATA[&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;This article shows how to configure background opacity for the kitty terminal emulator using picom and i3.&lt;/p&gt;
&lt;p&gt;By defaut, i3 doesn't support composting. Programs like picom add support for it.&lt;/p&gt;
&lt;p&gt;In addition, terminal emulators like kitty are hardware accelerated which means there's opportunities to offload from the CPU and save power.&lt;/p&gt;
&lt;h2&gt;Install &amp;amp; configure picom&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install picom&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo pacman -S picom
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Move default configuration file to &lt;em&gt;~/.config/picom/picom.conf&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Define opacity rule:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;opacity-rule = [&amp;quot;90:class_g = 'kitty'&amp;quot;];
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Save changes&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Install &amp;amp; configure kitty&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install picom&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo pacman -S kitty
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Move default configuration file to &lt;em&gt;~/.config/kitty/kitty.conf&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set background opacity:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;background_opacity 0.90
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Save changes&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Configure i3&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Open your i3 configuration and add the following line to it:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;exec_always picom
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Restart i3.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/title/Picom#Opacity"&gt;Picom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.archlinux.org/title/Kitty"&gt;Kitty&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/i3wm/comments/g62qy0/kitty_terminal_emulator_transparency_not_working/"&gt;Kitty emulator not working - Reddit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/resources/wiki/configure-opacity-manjaro</link>
      <guid>https://www.lqdev.me/resources/wiki/configure-opacity-manjaro</guid>
      <pubDate>12/11/2022 18:56 -05:00</pubDate>
      <category>i3</category>
      <category>wm</category>
      <category>linux</category>
      <category>manjaro</category>
      <category>kitty</category>
      <category>terminal</category>
      <category>wiki</category>
      <category>configuration</category>
      <category>picom</category>
    </item>
    <item>
      <title>Neofetch</title>
      <description>&lt;![CDATA[&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;Neofetch is a command-line system information tool. Neofetch displays information about your operating system, software and hardware.&lt;/p&gt;
&lt;h2&gt;Install using Pacman&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Open the terminal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run the following command&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;pacman -S neofetch
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Configure&lt;/h2&gt;
&lt;p&gt;The configuration file for neofetch is located at &lt;em&gt;$HOME/.config/neofetch/config.conf&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For more information on configuration options, see the &lt;a href="https://github.com/dylanaraps/neofetch/wiki/Customizing-Info"&gt;Customizing info article&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Run&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Open the terminal and enter the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;neofetch
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Run when terminal launches&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Open your &lt;em&gt;~/.bashrc&lt;/em&gt; file in your preferred text editor.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add the following line to your file and save it.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;neofetch
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Refresh your terminal with the following command.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-bash"&gt;source ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/dylanaraps/neofetch"&gt;Neofetch GitHub Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/resources/wiki/neofetch</link>
      <guid>https://www.lqdev.me/resources/wiki/neofetch</guid>
      <pubDate>08/25/2022 15:19 -05:00</pubDate>
      <category>technology</category>
      <category>linux</category>
      <category>tools</category>
      <category>terminal</category>
    </item>
  </channel>
</rss>