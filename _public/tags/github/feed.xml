<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>Luis Quintanilla - github</title>
    <link>https://www.lqdev.me/tags/github</link>
    <description>All content tagged with 'github' by Luis Quintanilla</description>
    <lastBuildDate>9/14/2025 10:31 PM -05:00</lastBuildDate>
    <language>en</language>
    <item>
      <title>Copilot, add new features. But first, coffee</title>
      <description>&lt;![CDATA[&lt;p&gt;Something I've tried to make a habit of on a weekly basis is compiling a post which aggregates all posts on my website from the past week. Because right now it's not fully automated and I haven't been posting as much, there are gaps.&lt;/p&gt;
&lt;p&gt;The process is fairly straightforward. I run a script that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Collects all of the previous week's posts&lt;/li&gt;
&lt;li&gt;Drafts a note with links to all the posts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then, I publish the post.&lt;/p&gt;
&lt;p&gt;Given this is mostly automated, I decided it was something I could just create a GitHub Action to do the post generation and publishing on my behalf.&lt;/p&gt;
&lt;p&gt;However, there were some issues with the original file generation and formatting that were annoying, but easy enough to fix manually so I never invested time in fixing them.&lt;/p&gt;
&lt;p&gt;This morning, I created a few issues describing the features and improvements I wanted to make. Worth noting, I did this from my phone.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/lqdev/luisquintanilla.me/issues/213"&gt;#213&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lqdev/luisquintanilla.me/issues/215"&gt;#215&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rather than working on them though, I assigned them to GitHub Coding Agent and stepped out to grab coffee.&lt;/p&gt;
&lt;p&gt;The agent worked on solutions in the background and by the time I got back, I had working solutions. They weren't perfect but with no input from me, it got 90-95% of it right. The rest were minor refinements.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/copilot-add-new-features-but-first-coffee</link>
      <guid>https://www.lqdev.me/notes/copilot-add-new-features-but-first-coffee</guid>
      <pubDate>9/14/2025 10:31 PM -05:00</pubDate>
      <category>github</category>
      <category>copilot</category>
      <category>ai</category>
      <category>indieweb</category>
      <category>blogging</category>
      <category>githubactions</category>
    </item>
    <item>
      <title>Testing my GH mobile publishing flow</title>
      <description>&lt;![CDATA[&lt;h2&gt;This is a post&lt;/h2&gt;
&lt;p&gt;As far as posts go it's &lt;strong&gt;bold&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I can write &lt;em&gt;code&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-fsharp"&gt;let x = 1
x * x
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote class="blockquote"&gt;
&lt;p&gt;To be or not to be&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Maybe one day we will&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add responses&lt;/li&gt;
&lt;li&gt;Add bookmarks&lt;/li&gt;
&lt;li&gt;Add media posts&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here are some attachments?&lt;/p&gt;
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/5ae15c0b-fac2-4ec5-be39-15fe6db277ca" class="img-fluid" alt="Image" /&gt;&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/test-github-mobile-post</link>
      <guid>https://www.lqdev.me/notes/test-github-mobile-post</guid>
      <pubDate>9/14/2025 9:50 PM -05:00</pubDate>
      <category>github</category>
      <category>blogging</category>
      <category>githubactions</category>
      <category>cicd</category>
      <category>indieweb</category>
      <category>website</category>
    </item>
    <item>
      <title>Website Post Statistics - June 2025</title>
      <description>&lt;![CDATA[&lt;p&gt;I haven't published much this past month. Notes and responses are significantly down from last year.&lt;/p&gt;
&lt;p&gt;That said, I'm happy that so far I've published seven long-form blog posts, which is how many I published all of last year.&lt;/p&gt;
&lt;p&gt;I haven't spent as much time bookmarking and resharing content. Partially due to the fact that I'm still working on the redesign. So far &lt;a href="https://www.lqdev.me/posts/vibe-specing-prompt-to-spec/"&gt;vibe-specing&lt;/a&gt; the redesign hasn't yielded good enough results. Maybe I need to break down my problem further. That experience on its own might make a good blog post.&lt;/p&gt;
&lt;p&gt;Part of the challenge with the redesign is that I'm trying to find a balance between standardizing my front-matter YAML schemas so that I can simplify my code and just have a single function handle the parsing of the front-matter, while at the same time enabling custom rendering depending on the post type. I think in the end what I'll end up doing is having different schemas per post type and maybe refactoring some of my code to remove redundancies.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/post-statistics-june-2025</link>
      <guid>https://www.lqdev.me/notes/post-statistics-june-2025</guid>
      <pubDate>2025-07-01 20:00 -05:00</pubDate>
      <category>githubactions</category>
      <category>cicd</category>
      <category>blogging</category>
      <category>stats</category>
      <category>github</category>
    </item>
    <item>
      <title>Copilot Agent is giving me attitude</title>
      <description>&lt;![CDATA[&lt;blockquote class="blockquote"&gt;
&lt;p&gt;(see your rules and project plan)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Is that Copilot's way of saying, &amp;quot;Per my previous e-mail...&amp;quot;?&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cdn.lqdev.tech/files/images/sassy-copilot-agent.png" class="img-fluid" alt="A conversation with Github Copilot Agent" /&gt;&lt;/p&gt;
&lt;p&gt;And then it rage quit.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://cdn.lqdev.tech/files/images/copilot-agent-quit.png" class="img-fluid" alt="Error message saying GitHub Copilot Agent exhausted token limit" /&gt;&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/attitude-copilot-agent</link>
      <guid>https://www.lqdev.me/notes/attitude-copilot-agent</guid>
      <pubDate>2025-05-22 21:14 -05:00</pubDate>
      <category>github</category>
      <category>copilot</category>
      <category>agent</category>
      <category>funny</category>
    </item>
    <item>
      <title>Website Post Statistics - January 2025</title>
      <description>&lt;![CDATA[&lt;p&gt;Off to a good start.&lt;/p&gt;
&lt;p&gt;In the month of January, I wrote two long-form posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.lqdev.me/posts/listen-audiobooks-librivox-antennapod/"&gt;Building a Reading Habit with Audiobooks, LibriVox, and AntennaPod&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lqdev.me/posts/deploy-owncast-azure/"&gt;Deploy your own Owncast server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Last year, I published about seven of them.&lt;/p&gt;
&lt;p&gt;As I tinker some more &lt;a href="https://www.lqdev.me/notes/first-owncast-stream/"&gt;live on stream&lt;/a&gt; and use blog posts as a more structured way to orgqanize my explorations, I expect this year to have a healthy number of longer-form blog posts.&lt;/p&gt;
&lt;p&gt;Notes and responses are not too far behind either. Both of them are at 14 in January. That's about 10% and 5% the number of posts in both of those categories last year. I haven't been reposting things I'm reading as often, but I'd like to start doing that some more.&lt;/p&gt;
&lt;p&gt;Similar to long-form posts, as I &lt;a href="https://www.lqdev.me/notes/tinkering-deepseek-r1-dotnet-github-models"&gt;reflect on each stream and publish the recordings&lt;/a&gt;, I expect at least one note every one or two weeks just for the stream.&lt;/p&gt;
&lt;p&gt;No surprise, tags on my posts continue to be related to AI.&lt;/p&gt;
&lt;p&gt;This month I didn't really do the monthly &lt;a href="https://www.lqdev.me/tags/cratefinds"&gt;music playlist&lt;/a&gt; kind of posts. If I were to quickly summarize the music on repeat this month, it'd be the &lt;a href="https://www.lqdev.me/responses/andre-3000-listening-to-the-sun"&gt;Andre 3000 album, New Blue Sun&lt;/a&gt;.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/post-statistics-jan-2025</link>
      <guid>https://www.lqdev.me/notes/post-statistics-jan-2025</guid>
      <pubDate>2025-02-02 18:06 -05:00</pubDate>
      <category>githubactions</category>
      <category>cicd</category>
      <category>blogging</category>
      <category>stats</category>
      <category>github</category>
    </item>
    <item>
      <title>Tinkering with DeepSeek R1, GitHub Models, and .NET on stream</title>
      <description>&lt;![CDATA[&lt;p&gt;I saw that the &lt;a href="https://azure.microsoft.com/en-us/blog/deepseek-r1-is-now-available-on-azure-ai-foundry-and-github/"&gt;DeepSeek R1 model is now on GitHub Models and Azure AI Foundry&lt;/a&gt;, so I decided to start a stream and play around with it in the GitHub Models playground as well as a .NET application.&lt;/p&gt;
&lt;p&gt;Here's the recording.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=8Z6iFALi8kM" title="YouTube Video Thumbnail Tinkering on Stream with DeepSeek R1, GitHub Models, and .NET"&gt;&lt;img src="http://img.youtube.com/vi/8Z6iFALi8kM/0.jpg" class="img-fluid" alt="YouTube Video Thumbnail Tinkering on Stream with DeepSeek R1, GitHub Models, .NET" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I rambled on stream since it's my stream of consciousness as I'm tinkering with these technologies.&lt;/p&gt;
&lt;p&gt;If you're mainly interested in the code, here's the GitHub repo: &lt;a href="https://github.com/lqdev/DeepSeekDotnetSample"&gt;lqdev/DeepSeekDotnetSample&lt;/a&gt;&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/tinkering-deepseek-r1-dotnet-github-models</link>
      <guid>https://www.lqdev.me/notes/tinkering-deepseek-r1-dotnet-github-models</guid>
      <pubDate>2025-01-29 19:59 -05:00</pubDate>
      <category>deepseek</category>
      <category>ai</category>
      <category>dotnet</category>
      <category>github</category>
      <category>azure</category>
      <category>livestream</category>
    </item>
    <item>
      <title>Workaround for Azure CLI docker image azcopy issue in GitHub Actions</title>
      <description>&lt;![CDATA[&lt;p&gt;Publishing on my site was broken since yesterday. I thought it was only me but after doing some digging looks like it was an issue with Azure CLI and the link it uses to download azcopy.&lt;/p&gt;
&lt;p&gt;Looks like the team is already working on a fix and you can track progress using this issue&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/Azure/azure-cli/issues/30635"&gt;https://github.com/Azure/azure-cli/issues/30635&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you're using Azure CLI in GitHub Actions and running into this problem, you can unblock yourself by installing azcopy manually. Here's the snippet that worked for me.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-yaml"&gt;- name: Upload to blob storage
  uses: azure/CLI@v1
  with:
    azcliversion: 2.67.0
    # azcopy workadound https://github.com/Azure/azure-cli/issues/30635
    inlineScript: |
        tdnf install -y azcopy;
        # YOUR SCRIPT
&lt;/code&gt;&lt;/pre&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/gh-actions-az-cli-docker-azcopy-workaround</link>
      <guid>https://www.lqdev.me/notes/gh-actions-az-cli-docker-azcopy-workaround</guid>
      <pubDate>2025-01-10 21:12 -05:00</pubDate>
      <category>azure</category>
      <category>github</category>
      <category>cicd</category>
    </item>
    <item>
      <title>Upgraded to .NET 9</title>
      <description>&lt;![CDATA[&lt;p&gt;Obligatory upgrade post. Just upgraded the website to .NET 9. As with all the previous years, it involved no code changes, and all I had to do was updade the version I'm using in my project file and GitHub Actions file.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/website-upgraded-dotnet-9</link>
      <guid>https://www.lqdev.me/notes/website-upgraded-dotnet-9</guid>
      <pubDate>2024-11-14 00:38 -05:00</pubDate>
      <category>dotnet</category>
      <category>net9</category>
      <category>githubactions</category>
      <category>github</category>
      <category>indieweb</category>
      <category>upgrade</category>
    </item>
    <item>
      <title>Website Post Statistics - October 2024</title>
      <description>&lt;![CDATA[&lt;p&gt;It's been a while since I've done one of these.&lt;/p&gt;
&lt;p&gt;One thing I'm changing is the titles. For the other posts, the titles don't match up with the date for the metrics. For example the post for &amp;quot;July 2024&amp;quot; was actually talking about June metrics. Kind of confusing, so fixing that this month.&lt;/p&gt;
&lt;p&gt;This is my post&lt;/p&gt;
&lt;p&gt;Post Type&lt;/p&gt;
&lt;p&gt;Count&lt;/p&gt;
&lt;p&gt;Blogs&lt;/p&gt;
&lt;p&gt;4&lt;/p&gt;
&lt;p&gt;Notes&lt;/p&gt;
&lt;p&gt;83&lt;/p&gt;
&lt;p&gt;Responses&lt;/p&gt;
&lt;p&gt;251&lt;/p&gt;
&lt;p&gt;Overall the trend is nice. I'm just under 1 response a day. Not like that's the goal, but in general I think it shows a steady stream of content I'm posting on the website.&lt;/p&gt;
&lt;p&gt;With two recent blog posts published, that brings me to 5. The script ran just before I hit publish on the last blog which is why you only see four.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.lqdev.me/posts/build-your-own-live-streaming-app-owncast-dotnet-aspire/"&gt;Build your own self-hosted live streaming application with Owncast and .NET Aspire&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lqdev.me/posts/digitize-analog-bookmarks-with-ai-dotnet/"&gt;Digitize Analog Bookmarks using AI, .NET, and GitHub Models&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There's a few other ideas I'm tinkering with, which might easily get me close to or past the 8 blog posts from last year.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/post-statistics-october-2024</link>
      <guid>https://www.lqdev.me/notes/post-statistics-october-2024</guid>
      <pubDate>2024-11-01 09:25 -05:00</pubDate>
      <category>githubactions</category>
      <category>cicd</category>
      <category>blogging</category>
      <category>stats</category>
      <category>github</category>
    </item>
    <item>
      <title>Digitize Analog Bookmarks using AI, .NET, and GitHub Models</title>
      <description>&lt;![CDATA[
## Introduction

This past year I've made more of an effort to read. I track books in my [/library](/library) page.

Although I have a [Nova Air 2 E-Note device](https://shop.boox.com/products/novaair2), given the choice, I prefer physical books. Despite the conveniene of an electronic note-taking device, theres something about analog that I find hard to quit. 

As I read books, especially non-fiction, I annotate them in various ways. Eventually, those annotations make their way into my library page.

Here's an example of those annotations for [Building A Second Brain by Thiago Forte](/reviews/building-a-second-brain).

The process of transferring notes is manual and tedious. I don't always have the discipline to transfer them at periodic intervals and what ends up happening is, I get to the end of the book without transferring any notes. To make space for new books, I donate it or resell the ones I've read. If I didn't take the time to transfer those notes, they're gone. [Slow Productivity](/reviews/slow-productivity-newport) is an example of that.

I want to find a better system that's low-maintenance for keeping more of these notes and retaining knowledge I've found valuable. 

Then it hit me, why not use AI? I know I could use OCR or even some of the AI models of yesteryear. The challenge is, those systems are error prone and given I don't always have the motivation to transfer notes manually, I have even less motivation to build and maintain such a system.

However, vision models have advanced significantly and when paired with language models, the barrier to entry for reasoning over image data has drastically decreased. 

That's what led to this post. In this post, I'll show how you can use AI models like GPT-4o Mini to extract the passages I've annotated in physical books from an image. I then format those passages in markdown to make them easy to directly copy and paste them onto the website. 

I know there's probably a ton of services that do this for you, but it's a lot more fun to build one from scratch. With that in mind, let's get started. 

You can find the source for the application in the [AIBookmarks GitHub repository](/github/AIBookmarks). 

Alternatively, I've configured the repo to use GitHub CodeSpaces, so you can launch the application there as well.

[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/lqdev/AIBookmarks)

## Configure access to GitHub Models

I'll be using [GitHub Models](https://github.blog/news-insights/product-news/introducing-github-models/) as my AI model provider. GitHub Models provides developers with access to a catalog of AI models such as GPT-4o, Llama 3.2, Phi 3.5, and many others. Best of all, it's completely free, [though restrictions apply](https://docs.github.com/en/github-models/prototyping-with-ai-models#rate-limits).

I chose GitHub Models for the following reasons:

- Zero installation. Although I really like Ollama and some of the other local AI model providers, I didn't want to fill precious hard-drive space with AI models.
- It's free! Since I'm just prototyping, even with their limited capacity, it should be enough to prove out whether my scenario is feasible.
- They provide access to multi-modal models such as GPT-4o, Llama 3.2 Vision, and Phi 3.5 Vision, which can reason over text and images, which is what I need.
- I'm one of the GPU poor. My [Lenovo Thinkpad X1](https://www.lenovo.com/us/en/p/laptops/thinkpad/thinkpadx1/x1-titanium-g1/22tp2x1x1t1?orgRef=https%253A%252F%252Fduckduckgo.com%252F) couldn't handle running one of the vision models.

Getting set up with GitHub models is fairly easy. At minimum, it requires:

1. A GitHub Account.
1. A Personal Access Token. For more details, see the [GitHub documentation](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens).

Once you have both of those, you can get started building your application.  

## Create a client

The sample application is a C# console application which targets .NET 9. However, the code shown here should work on the latest LTS version as well.

For this solution, I use the Azure AI Inference implementation of [Microsoft.Extensions.AI](https://www.nuget.org/packages/Microsoft.Extensions.AI.AzureAIInference/). [Microsoft.Extensions.AI](https://devblogs.microsoft.com/dotnet/introducing-microsoft-extensions-ai-preview/), M.E.AI for short, is a set of abstractions that provides a common set of interfaces for interacting with AI models.

Although we're using the Azure AI Inference client SDK implementation of M.E.AI, we can still use it to work with models from the GitHub Model catalog. 

```csharp
IChatClient client =
    new ChatCompletionsClient(
        endpoint: new Uri("https://models.inference.ai.azure.com"), 
        new AzureKeyCredential(Environment.GetEnvironmentVariable("GITHUB_TOKEN")))
        .AsChatClient("gpt-4o-mini");
```

## Load your images

In the repo, I have a set of sample images containing annotations. These are the images I'll send to the AI model for processing. 

The following is an sample from [The Creative Act by Rick Rubin](/reviews/creative-act-way-of-being-rubin).

![An image of a book with pencil markings](https://github.com/lqdev/AIBookmarks/raw/main/data/creative-act-1.jpg)

1. Load the files

    ```csharp
    var filePaths = Directory.GetFiles("data");
    ```

1. Create a collection to store extracted passages

    ```csharp
    var passages = new List&lt;AIBookmark&gt;();
    ```

## Process the images

Once you have the images loaded, it's time to proces them.

1. Start by setting the system prompt. This will provide the initial guidance for the extraction task.

    ```csharp
    var systemPrompt = 
        """
        You are an AI assistant that extracts underlined, highlighted, and marked passages from book page images.

        When passages have a natural continuation between pages, merge them and assign the page number where the first passage starts.
        """;
    ```

1. Then, iterate over each of the images and process them.

    ```csharp
    foreach(var path in filePaths)
    {
        var file = await File.ReadAllBytesAsync(path);
        var messages = new List&lt;ChatMessage&gt;
        {
            new ChatMessage(ChatRole.System, systemPrompt),
            new ChatMessage(ChatRole.User, new AIContent[] {
                new ImageContent(file, "image/jpeg"),
                new TextContent("Extract the marked passages from the image"),
            })
        };

        var response = await client.CompleteAsync&lt;List&lt;AIBookmark&gt;&gt;(messages, options: new ChatOptions {Temperature = 0.1f});

        passages.AddRange(response.Result);
    }
    ```

    This code:

    1. Loads the image as a `byte[]`.
    1. Composes a set of messages that include:

        - The system prompt
        - The image
        - The user prompt instructing the model to extract the marked passages from the image

    1. Sends the messages to the model for processing and returns a list of `AIBookmark`. An `AIBookmark` is a custom class I've defined as follows:

        ```csharp
        class AIBookmark
        {
            public string Text {get;set;}

            public int PageNumber {get;set;}
        }
        ```

        Some of the more recent AI models support structured output, which enforce a schema on AI model outputs. You can take a look at the [OpenAI documentation](https://openai.com/index/introducing-structured-outputs-in-the-api/) for more details. It's important to note though that the functionality is not exclusive to OpenAI models.

    1. Adds the extracted passages to the `passages` collection.

## Format the results

Once all of the files are processed by the AI model, additional processing is done to ensure that they're in the correct page order as well as formatted as markdown blockquotes. 

```csharp
var sortedPassages = 
    passages
        .OrderBy(p =&gt; p.PageNumber)
        .Select(p =&gt; $"&gt; {p.Text} (pg. {p.PageNumber})");
```

## Display the results

```csharp
foreach(var passage in sortedPassages)
{
    Console.WriteLine(passage);
    Console.WriteLine("");
}
```

For the images included in the repo's *data* directory, output might look like the following.

```markdown
&gt; This isn’t a matter of blind belief in yourself. It’s a matter of experimental faith. (pg. 278)

&gt; When we don’t yet know where we’re going, we don’t wait. We move forward in the dark. If nothing we attempt yields progress, we rely on belief and will. We may take several steps backward in the sequence to move ahead. (pg. 278)

&gt; If we try ten experiments and none of them work; we have a choice. We can take it personally, and think of ourselves as a failure and question our ability to solve the problem. (pg. 278)

&gt; Staying in it means a commitment to remain open to what’s around you. Paying attention and listening. Looking for connections and relationships in the outside world. Searching for beauty. Seeking stories. Noticing what you find interesting, what makes you lean forward. And knowing all of this is available to use next time you sit down to work, where the raw data gets put into form. (pg. 296)

&gt; Just as a surfer can’t control the waves, artists are at the mercy of the creative rhythms of nature. This is why it’s of such great importance to remain aware and present at all times. Watching and waiting. (pg. 296)

&gt; Maybe the best idea is the one you’re going to come up with this evening. (pg. 297)
```

## Improvements and next steps

Putting the application together took me less than an hour so this is far from done. However, it does provide me with a starting point and offers validation that this could be a way to more easily capture the knowledge I'm curating from physical books. 

Some improvements I can make here:

1. Update the system prompt with some samples to help guide the extraction. For example, in the output I shared, that last passage is not annotated. It just happens to be a mostly blank page with that quote in the center, therefore giving the illusion that the passage is important in some way.  
1. Add additional information to the AIBookmark class like `Index` so I can ensure order within a page is preserved. Right now page number is good enough, but I can't guarantee the correct order. An index property might help here.
1. Use a service with higher rate limits. The current rate limits wouldn't allow me to process a large number of images at once. Therefore, I'd need to use a service with higher limits. Alternatively, I could make this a job that runs in the background which abides by the rate limits but I also don't have to spend money on. Given I'm not using this for anything mission-critical, that'd be an acceptable solution as well. 
1. Refactor the solution so I can more easily swap between tasks. For example, sometimes I might want to use it with images from my bullet journal. Other times, I might want to use it with handwritten notes. Whatever the case may be, it'd be good to not have to rewrite the prompts every time. 

Some ways I see myself using this project:

1. Periodically collect images of annotated pages and save them to cloud storage. 
1. When I'm done with the book, drop all the images in the *data* directory.
1. Further enrich data by condensing repetitive passages and extracting key concepts.
1. Storing this knowledge into some sort of knowledge store to make it actionable. 

## Conclusion

Just for fun, Tyler released all of the lyrics to his [latest album](/responses/chromakopia-tyler-the-creator-released) as [images on X](https://twitter.com/tylerthecreator/status/1852105825650708651/photo/1). With a few tweaks, I was able to repurpose this solution to extract the text from them and that worked relatively well. 

Just with this simple solution, there's a ton of other applications I can think of in my daily life to help bridge my analog and digital lives. 

What other use cases do you see yourself using something like this for? [Let me know](/contact).

Happy coding!]]&gt;</description>
      <link>https://www.lqdev.me/posts/digitize-analog-bookmarks-with-ai-dotnet</link>
      <guid>https://www.lqdev.me/posts/digitize-analog-bookmarks-with-ai-dotnet</guid>
      <pubDate>2024-10-31 21:41 -05:00</pubDate>
      <category>ai</category>
      <category>dotnet</category>
      <category>github</category>
      <category>reading</category>
      <category>bookmarks</category>
      <category>analog</category>
      <category>digital</category>
      <category>reading</category>
      <category>notes</category>
    </item>
    <item>
      <title>Website Post Statistics - September 2024</title>
      <description>&lt;![CDATA[&lt;p&gt;The most significant update from last month is that I have now passed the number of responses compared to last year.&lt;/p&gt;
&lt;p&gt;The top tag continues to be AI and The Verge is the top domain I link to.&lt;/p&gt;
&lt;p&gt;I'm in the process of redesigning the website, so that's probably one of the things I'll be focusing the next few months.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/post-statistics-september-2024</link>
      <guid>https://www.lqdev.me/notes/post-statistics-september-2024</guid>
      <pubDate>2024-09-15 09:19 -05:00</pubDate>
      <category>githubactions</category>
      <category>cicd</category>
      <category>blogging</category>
      <category>stats</category>
      <category>github</category>
    </item>
    <item>
      <title>Website Post Statistics - August 2024</title>
      <description>&lt;![CDATA[&lt;p&gt;Finished July with more regular posting.&lt;/p&gt;
&lt;p&gt;Only 4 posts away from passing last year's response count.&lt;/p&gt;
&lt;p&gt;As mentioned on &lt;a href="https://www.lqdev.me/notes/org-capture-functions-file-target"&gt;another post&lt;/a&gt;, I've been slowly working on transitioning authoring workflows to Emacs using org-capture templates.&lt;/p&gt;
&lt;p&gt;This month, I want to work on making capturing content from Nyxt more seamless, especially since responses are the types of posts I use most.&lt;/p&gt;
&lt;p&gt;The other thing I'd like to start doing is consolidating the structure of my posts. Right now the YAML front-matter for the various posts types is significantly different. However, it doesn't have to be.&lt;/p&gt;
&lt;p&gt;For most posts, I need:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Title&lt;/li&gt;
&lt;li&gt;Date published&lt;/li&gt;
&lt;li&gt;Data updated&lt;/li&gt;
&lt;li&gt;Tags&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Responses are a little different because I also need to include the link to the original content I'm referencing in the post.&lt;/p&gt;
&lt;p&gt;Once that's done, at some point, I'd also like to consolidate my URLs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/posts&lt;/code&gt; captures long-form blog posts&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/feed&lt;/code&gt; captures microblog posts and responses&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since everything is a post, consolidating under one of them for all my posts and providing additional urls like &lt;code&gt;/notes&lt;/code&gt;, &lt;code&gt;/photos&lt;/code&gt;, &lt;code&gt;/articles&lt;/code&gt; for the individual types of posts might make more sense.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/post-statistics-august-2024</link>
      <guid>https://www.lqdev.me/notes/post-statistics-august-2024</guid>
      <pubDate>2024-08-01 20:19 -05:00</pubDate>
      <category>githubactions</category>
      <category>cicd</category>
      <category>blogging</category>
      <category>stats</category>
      <category>github</category>
    </item>
    <item>
      <title>Website Post Statistics - July 2024</title>
      <description>&lt;![CDATA[&lt;p&gt;Better late than never.&lt;/p&gt;
&lt;p&gt;Nothing too interesting this month. I haven't been posting as much.&lt;/p&gt;
&lt;p&gt;I think part of that is because I've been creating DayOne posts more.&lt;/p&gt;
&lt;p&gt;I've been relying on DayOne to share articles from my RSS reader. That's worked really well for bookmarking.&lt;/p&gt;
&lt;p&gt;As far as my authoring process, when working locally, I've been using Emacs more.&lt;/p&gt;
&lt;p&gt;One reason for Emacs is &lt;a href="https://github.com/lqdev/luisquintanilla.me/tree/main/.templates"&gt;capture templates&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Technically, I already have something similar with &lt;a href="https://github.com/lqdev/luisquintanilla.me/tree/main/.vscode"&gt;VS Code Snippets&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I like the richness of the Emacs experience more though.&lt;/p&gt;
&lt;p&gt;The future workflow I'm thinking of involves two components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Elfeed&lt;/li&gt;
&lt;li&gt;Nyxt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When reading articles using Elfeed, I can create a function that takes the information from the entry I'm on and converts it into an entry on my site using capture templates.&lt;/p&gt;
&lt;p&gt;Similarly, in Nyxt while browsing the internet, I can create a similar function which uses capture templates to create website entries.&lt;/p&gt;
&lt;p&gt;Maybe I can get a long-form post out of that experiment.&lt;/p&gt;
&lt;p&gt;As far as numbers go, I'm at 56 notes for the year which is 15 more than last year.&lt;/p&gt;
&lt;p&gt;I'm closing in on passing last year's response count at 210.&lt;/p&gt;
&lt;p&gt;Most of the content shared continues to be mainly about AI.&lt;/p&gt;
&lt;p&gt;Top linked domain is still The Verge.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/post-statistics-july-2024</link>
      <guid>https://www.lqdev.me/notes/post-statistics-july-2024</guid>
      <pubDate>2024-07-18 18:26 -05:00</pubDate>
      <category>githubactions</category>
      <category>cicd</category>
      <category>blogging</category>
      <category>stats</category>
      <category>github</category>
    </item>
    <item>
      <title>Website Post Statistics - June 2024</title>
      <description>&lt;![CDATA[&lt;p&gt;6 months in and these are the main takeaways.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;At 51 notes, I'm 10 over last year's total notes.&lt;/li&gt;
&lt;li&gt;Responses are healthy. I'm closing in on 200. I wasn't as active the month of May so I'm still shy of last year's mark, but given it's still only halfway through the year, it seems like good progress so far.&lt;/li&gt;
&lt;li&gt;Most of my posts continue to be related to AI. While I can believe it, I also think I could be more specific and get more creative with my tags. Given the lead AI has though in terms of tag numbers, it'll be harder for those more fine-grained tags to come through.&lt;/li&gt;
&lt;li&gt;I won't use the word struggle, but I have paid less attention to long form posts. There's a few that I have planned for June, so that should help bump those numbers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Overall I'm happy with the progress and use I'm getting out of the website.&lt;/p&gt;
&lt;p&gt;Some things I'd like to work on are simplifying my authoring process. Although github.dev and Codespaces can be convenient, it's a hassle. Authoring content locally reduces some of that friction. However, I'm still bound to my laptop.&lt;/p&gt;
&lt;p&gt;As a Day One subscriber, I haven't maximized my subscription. This past week I've started to use it more for bookmarking articles I'm reading. Maybe that's a way that I can bookmark articles when on the go and when I'm ready to reshare them on the website, I can just copy from there.&lt;/p&gt;
&lt;p&gt;Something else I can use Day One for are to start longer form blog or note drafts. Then, when I'm ready to do more serious work and publish them, I can continue on my laptop.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/post-statistics-june-2024</link>
      <guid>https://www.lqdev.me/notes/post-statistics-june-2024</guid>
      <pubDate>2024-06-06 22:26 -05:00</pubDate>
      <category>githubactions</category>
      <category>cicd</category>
      <category>blogging</category>
      <category>stats</category>
      <category>github</category>
    </item>
    <item>
      <title>Website Post Statistics - May 2024</title>
      <description>&lt;![CDATA[&lt;p&gt;Still not mid-year and I'm making progress on publishing to the website. Some notable observations this month:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;At 43 notes, I'm already past the total number of notes posted in 2023. Weekly summary posts like &lt;a href="https://www.lqdev.me/tags/cratefinds"&gt;Create Finds&lt;/a&gt; and &lt;a href="https://www.lqdev.me/tags/weeklysummary"&gt;Weekly Summary&lt;/a&gt; continue to contribute towards this number.&lt;/li&gt;
&lt;li&gt;Despite a slow last week of April with no posts, I was still able to manage adding nearly 40 new posts. At 184, I'm closing in and expect to surpass last year's response posts within the next two months.&lt;/li&gt;
&lt;li&gt;I'm still working through how to go about publishing longer-form content to the blog. I'm still only at 3 posts. Given that I posted 8 last year, it's not an elusive target. Still, I haven't figured out what some good topics / experiments I'm doing today would be interesting to expand upon in the blog. I'm in no rush though. I'm enjoying the shorter form posts both notes and responses.&lt;/li&gt;
&lt;/ul&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/post-statistics-may-2024</link>
      <guid>https://www.lqdev.me/notes/post-statistics-may-2024</guid>
      <pubDate>2024-05-05 20:31 -05:00</pubDate>
      <category>githubactions</category>
      <category>cicd</category>
      <category>blogging</category>
      <category>stats</category>
      <category>github</category>
    </item>
    <item>
      <title>GitHub Actions for Azure</title>
      <description>&lt;![CDATA[&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;How to use GitHub Actions with Azure&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/azure/developer/github/github-actions"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Authenticate to Azure from GitHub&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://learn.microsoft.com/azure/developer/github/connect-from-azure?tabs=azure-cli%2Clinux"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This workflow is useful when using the &lt;a href="https://github.com/azure/login?tab=readme-ov-file#github-actions-for-deploying-to-azure"&gt;az login action in GitHub Actions&lt;/a&gt;.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/resources/wiki/github-actions-azure</link>
      <guid>https://www.lqdev.me/resources/wiki/github-actions-azure</guid>
      <pubDate>04/23/2024 23:04 -05:00</pubDate>
      <category>github</category>
      <category>cicd</category>
      <category>githubactions</category>
      <category>azure</category>
    </item>
    <item>
      <title>GitHub Actions Publishing Workflow Fixed</title>
      <description>&lt;![CDATA[&lt;p&gt;The website had been out of comission for a few days because my credentials had expired. I could still add posts and make updates. However, none of them were published to Azure.&lt;/p&gt;
&lt;p&gt;Figuring out the right incantations wasn't straightforward, so &lt;a href="https://www.lqdev.me/resources/wiki/github-actions-azure/"&gt;saving the fix&lt;/a&gt; for future reference.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/gha-publishing-workflow-fixed</link>
      <guid>https://www.lqdev.me/notes/gha-publishing-workflow-fixed</guid>
      <pubDate>2024-04-23 22:51 -05:00</pubDate>
      <category>github</category>
      <category>blogging</category>
      <category>azure</category>
      <category>githubactions</category>
      <category>cicd</category>
    </item>
    <item>
      <title>Website Post Statistics - April 2024</title>
      <description>&lt;![CDATA[&lt;p&gt;My &lt;a href="https://www.lqdev.me/posts/website-metrics-github-actions/"&gt;website stats script&lt;/a&gt; seems to be running as expected.&lt;/p&gt;
&lt;p&gt;Some highlights from last month:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;With 33 notes posted in the microblog, I'm about 80% of the way to the number of total notes posted last year. These monthly summary posts, as well as my &lt;a href="https://www.lqdev.me/notes/crate-finds-march-2024"&gt;Crate Finds&lt;/a&gt; and &lt;a href="https://www.lqdev.me/notes/2024-04-01-weekly-post-summary/"&gt;Weekly Summary&lt;/a&gt; posts have somewhat contributed to this number but I like the pace I'm setting. Not even halfway through the year and it looks promising.&lt;/li&gt;
&lt;li&gt;While most of my responses are reshares (93), there's still a broader distribution across bookmarks and other type of reponses posts.&lt;/li&gt;
&lt;li&gt;AI continue to be the main topic I share posts around.&lt;/li&gt;
&lt;li&gt;The Verge is still one of the main sources I reshare. Personally, the redesign has contributed to the way I consume content from The Verge but also, the topics covered align with many of the things I'm interested in.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have yet to make progress on the long-form posts, but there are some experiments I've been tinkering with that will eventually make it on there.&lt;/p&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/notes/post-statistics-april-2024</link>
      <guid>https://www.lqdev.me/notes/post-statistics-april-2024</guid>
      <pubDate>2024-04-01 23:20 -05:00</pubDate>
      <category>githubactions</category>
      <category>cicd</category>
      <category>blogging</category>
      <category>stats</category>
      <category>github</category>
    </item>
    <item>
      <title>Grok-1</title>
      <description>&lt;![CDATA[[reshare] &lt;blockquote class="blockquote"&gt;
&lt;p&gt;This repository contains JAX example code for loading and running the Grok-1 open-weights model.&lt;/p&gt;
&lt;/blockquote&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/responses/grok-1-open-release</link>
      <guid>https://www.lqdev.me/responses/grok-1-open-release</guid>
      <pubDate>2024-03-17 20:45 -05:00</pubDate>
      <category>grok</category>
      <category>ai</category>
      <category>x</category>
      <category>github</category>
      <category>opensource</category>
      <category>moe</category>
    </item>
    <item>
      <title>What I learned from looking at 900 most popular open source AI tools</title>
      <description>&lt;![CDATA[[reshare] &lt;blockquote class="blockquote"&gt;
&lt;p&gt;So many cool ideas are being developed by the community. Here are some of my favorites.&lt;br /&gt;
&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Batch inference optimization: FlexGen, llama.cpp&lt;/li&gt;
&lt;li&gt;Faster decoder with techniques such as Medusa, LookaheadDecoding&lt;/li&gt;
&lt;li&gt;Model merging: mergekit&lt;/li&gt;
&lt;li&gt;Constrained sampling: outlines, guidance, SGLang&lt;/li&gt;
&lt;li&gt;Seemingly niche tools that solve one problem really well, such as einops and safetensors.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
]]&gt;</description>
      <link>https://www.lqdev.me/responses/learned-from-looking-900-oss-ai-tools-huyen</link>
      <guid>https://www.lqdev.me/responses/learned-from-looking-900-oss-ai-tools-huyen</guid>
      <pubDate>2024-03-14 22:13 -05:00</pubDate>
      <category>ai</category>
      <category>tools</category>
      <category>analysis</category>
      <category>openai</category>
      <category>github</category>
    </item>
  </channel>
</rss>